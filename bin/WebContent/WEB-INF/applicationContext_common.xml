<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:ApplicationResources"/>
        <property name="fallbackToSystemLocale" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="-1"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:jp/co/takeda/rdm/entity/**/*.xml" />
    </bean>
    <bean id="batchSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
        <constructor-arg index="1" value="BATCH" />
    </bean>

    <bean id="debugInterceptor" class="org.springframework.aop.interceptor.CustomizableTraceInterceptor">
          <property name="enterMessage" value="Entering $[targetClassShortName].$[methodName]($[argumentTypes])[$[arguments]]" />
          <property name="exitMessage" value="Exiting  $[targetClassShortName].$[methodName] : return = $[returnValue] : time = $[invocationTime]ms" />
    </bean>

    <aop:config proxy-target-class="true">
        <aop:advisor pointcut="execution(* jp.co.takeda.rdm.service.*.*(..)) or execution(* jp.co.takeda.rdm.common.DAO.*(..))" advice-ref="debugInterceptor"/>
    </aop:config>

    <beans profile="product">
        <context:component-scan base-package="jp.co.takeda" use-default-filters="true"/>
        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/RdmDataSource"/>
    </beans>
</beans>
